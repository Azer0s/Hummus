(use :<base>)

(def a (list "Hello" "World"))

(for (range x (list "Hello" "World"))
  (out x)
)

(for (range x a)
  (out x)
)

(for (range _ (.. 0 12)) ; you can still use the iterator (it's just _), it's just a paradigm that _ means ignored
  (out "Hi")
)

(out "----")

(def a 12)

(for (range i (.. 0 a))
  (out i)
)

(def test (fn false))

(for (test)
  (out "Hello world")
)

(for false
  (out "Hello world")
)

(def a false)

(for a
  (out "Hello world")
)

