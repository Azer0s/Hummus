;; Copyright (c) Ariel Simulevski
;; Written by Ariel Simulevski <ariel@simulevski.at>

(use :<base>)

;; str/concat Concats two or more strings
;; in:
;; * args .. the list of strings to concat
;; out: the concatenated string
(def str/concat (fn args
  (--system-do-strings! :concat args)
))

;; str/len Returns the length of a string
;; in:
;; * arg .. the string
;; out: the length of the string
(def str/len (fn arg
  (--system-do-strings! :len arg)
))

;; str/nth Returns a character of a string
;; in:
;; * idx .. the index of the character
;; * arg .. the lookup string
;; out: the character
(def str/nth (fn idx arg
  (--system-do-strings! :nth idx arg)
))

;; str/lower Converts a string to all lowercase
;; in:
;; * arg .. the string to convert
;; out: the converted string
(def str/lower (fn arg
  (--system-do-strings! :lower arg)
))

;; str/upper Converts a string to all uppercase
;; in:
;; * arg .. the string to convert
;; out: the converted string
(def str/upper (fn arg
  (--system-do-strings! :upper arg)
))

;; str/repeat Repeats a string n times
;; in:
;; * arg .. the string to repeat
;; * n .. the number of times to repeat the string
;; out: the repeated string
(def str/repeat (fn arg n
  (reduce
    (map
      (.. 1 n)
      (fn _ (identity arg))
    )
    (fn x acc
      (str/concat acc x)
    )
    ""
  )
))